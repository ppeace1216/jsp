/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.21
 * Generated at: 2022-10-17 08:56:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class test04_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("java.util");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>입력받은 데이터 출력</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");

	request.setCharacterEncoding("UTF-8");
	String name = request.getParameter("name");
	String addr = request.getParameter("addr");
	int age = Integer.parseInt(request.getParameter("age"));
	String[] pet = request.getParameterValues("pet");
	ArrayList<String> lst =new ArrayList<>();
	for(int i=0;i<pet.length;i++){
		lst.add(pet[i]);
	}
	String male = request.getParameter("male");
	String area = request.getParameter("area");

      out.write("\r\n");
      out.write("이름 : ");
      out.print(name );
      out.write("<br>\r\n");
      out.write("주소 : ");
      out.print(addr );
      out.write("<br>\r\n");
      out.write("나이 : ");
      out.print(age );
      out.write("<br>\r\n");
      out.write("좋아하는 동물 : \r\n");

	for(int i=0;i<pet.length;i++){
		out.println(pet[i]+"<br>");
	}

      out.write('\r');
      out.write('\n');

	for(int i=0;i<pet.length;i++){
		out.println(lst.get(i)+"<br>");
	}

      out.write("\r\n");
      out.write("성별 : ");
      out.print(male );
      out.write("<br>\r\n");
      out.write("지역 : ");
      out.print(area );
      out.write("<br>\r\n");
      out.write("<br><hr><br>\r\n");
      out.write("프로토콜 : ");
      out.print(request.getProtocol() );
      out.write("<br>\r\n");
      out.write("요청된 서버이름 : ");
      out.print(request.getServerName() );
      out.write("<br>\r\n");
      out.write("요청방식 : ");
      out.print(request.getMethod() );
      out.write("<br>\r\n");
      out.write("파라미터열 : ");
      out.print(request.getQueryString() );
      out.write("<br>\r\n");
      out.write("요청주소 : ");
      out.print(request.getRequestURL() );
      out.write("<br>\r\n");
      out.write("요청URI : ");
      out.print(request.getRequestURI() );
      out.write("<br>\r\n");
      out.write("서버이름 : ");
      out.print(request.getRemoteHost() );
      out.write("<br>\r\n");
      out.write("서버주소 : ");
      out.print(request.getRemoteAddr() );
      out.write("<br>\r\n");
      out.write("서버포트 : ");
      out.print(request.getRemotePort() );
      out.write("<br>\r\n");
      out.write("서버포트2 : ");
      out.print(request.getServerPort() );
      out.write("<br>\r\n");
      out.write("현재 문서의 경로 : ");
      out.print(request.getContextPath() );
      out.write("<br>\r\n");
      out.write("어셉트(Accept) : ");
      out.print(request.getHeader("Accept") );
      out.write("<br>\r\n");
      out.write("<br>\r\n");
      out.write("<h3>헤더정보 예제</h3>\r\n");
      out.write("<table>\r\n");
      out.write("\t<tr><td>헤더이름</td><td>헤더값</td></tr>\r\n");
      out.write("\t");

	Enumeration e = request.getHeaderNames();
	while(e.hasMoreElements()) {
		String headerName = (String)e.nextElement();
	
      out.write("\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td>");
      out.print(headerName );
      out.write("</td>\r\n");
      out.write("\t\t<td>");
      out.print(request.getHeader(headerName) );
      out.write("</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t");

	}
	
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
